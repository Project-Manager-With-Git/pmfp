:mod:`pmfp.entrypoint.requires.install`
=======================================

.. py:module:: pmfp.entrypoint.requires.install

.. autoapi-nested-parse::

   不同执行环境安装依赖.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   core/index.rst
   go_install/index.rst
   node_install/index.rst
   python_install/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.requires.install.get_abs_path
   pmfp.entrypoint.requires.install.go_install
   pmfp.entrypoint.requires.install.python_install
   pmfp.entrypoint.requires.install.install_requires



Attributes
~~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.requires.install.requires_install


.. function:: get_abs_path(path_str: str, cwd: Optional[pathlib.Path] = None) -> pathlib.Path

   由路径字符串获取绝对路径.

   :param path_str: 路径字符创
   :type path_str: str
   :param cwd: 指定执行时的位置
   :type cwd: Optional[Path]

   :returns: 路径字符串的绝对路径
   :rtype: Path


.. data:: requires_install
   

   

.. function:: go_install(cwd: pathlib.Path, package_names: List[str], test: bool = False, setup: bool = False, extras: Optional[str] = None, requires: Optional[List[str]] = None, test_requires: Optional[List[str]] = None, setup_requires: Optional[List[str]] = None, extras_requires: Optional[List[str]] = None, env_args: Optional[List[str]] = None) -> None


.. function:: python_install(cwd: pathlib.Path, env: str, package_names: List[str], test: bool = False, setup: bool = False, extras: Optional[str] = None, requires: Optional[List[str]] = None, test_requires: Optional[List[str]] = None, setup_requires: Optional[List[str]] = None, extras_requires: Optional[List[str]] = None, env_args: Optional[List[str]] = None) -> None


.. function:: install_requires(env: str, *, package_names: Optional[List[str]] = None, requirements: Optional[str] = None, test: bool = False, setup: bool = False, extras: Optional[str] = None, requires: Optional[List[str]] = None, test_requires: Optional[List[str]] = None, setup_requires: Optional[List[str]] = None, extras_requires: Optional[List[str]] = None, env_args: Optional[List[str]] = None, cwd: str = '.') -> None


