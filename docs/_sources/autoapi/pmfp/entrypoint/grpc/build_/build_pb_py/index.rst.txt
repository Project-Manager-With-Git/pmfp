:mod:`pmfp.entrypoint.grpc.build_.build_pb_py`
==============================================

.. py:module:: pmfp.entrypoint.grpc.build_.build_pb_py

.. autoapi-nested-parse::

   编译python语言模块.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.grpc.build_.build_pb_py.find_py_grpc_pb2_import_string
   pmfp.entrypoint.grpc.build_.build_pb_py.trans_grpc_model_py
   pmfp.entrypoint.grpc.build_.build_pb_py.gen_code
   pmfp.entrypoint.grpc.build_.build_pb_py.find_grpc_package
   pmfp.entrypoint.grpc.build_.build_pb_py.build_pb_py



Attributes
~~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.grpc.build_.build_pb_py.TRANS_GRPC_MODEL_IMPORT_TEMP


.. data:: TRANS_GRPC_MODEL_IMPORT_TEMP
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        
        from .{pb_package} import *
        from .{grpc_package} import *


    .. raw:: html

        </details>

   

.. function:: find_py_grpc_pb2_import_string(name: str) -> str

   python的grpc模块as的内容.


.. function:: trans_grpc_model_py(to: str) -> None

   转换python的grpc输出为一个python模块.

   :param to: 目标地址
   :type to: str


.. function:: gen_code(includes_str: str, to: str, flag_str: str, target_str: str, cwd: pathlib.Path) -> None

   生成python模块.


.. function:: find_grpc_package(to: pathlib.Path) -> Tuple[str, str]


.. function:: build_pb_py(serv_file: str, includes: List[str], to: str, cwd: pathlib.Path, files: Optional[List[str]] = None, **kwargs: str) -> None

   编译grpc的protobuf定义文件为python语言模块.

   :param serv_file: 定义grpc service的目标proto文件
   :type serv_file: str
   :param includes: 待编译的protobuffer文件所在的文件夹
   :type includes: List[str]
   :param to: 编译成的模块文件放到的路径
   :type to: str
   :param cwd: 执行目录.
   :type cwd: Path
   :param files: 待编译的protobuffer文件
   :type files: List[str]


