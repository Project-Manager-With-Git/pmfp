:py:mod:`pmfp.entrypoint.http.query`
====================================

.. py:module:: pmfp.entrypoint.http.query

.. autoapi-nested-parse::

   使用http请求获取资源.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   core/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.http.query.query_http
   pmfp.entrypoint.http.query.query



Attributes
~~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.http.query.http_query


.. py:function:: query_http(url: str, method: str, *, auth: Optional[str] = None, auth_type: Optional[str] = None, payload: Optional[str] = None, payload_type: Optional[str] = None, stream: bool = False, verify: bool = False, cert: Optional[str] = None, cb: Optional[Callable[[str], None]] = None) -> None

   http请求并打印结果.

   :param url: 要访问的http资源的地址
   :type url: str
   :param method: 访问资源的方法
   :type method: str
   :param auth: 用户身份验证字符串. Defaults to None.
   :type auth: Optional[str], optional
   :param auth_type: 用户身份的验证类型. Defaults to None.
   :type auth_type: Optional[str], optional
   :param payload: 请求负载. Defaults to None.
   :type payload: Optional[str], optional
   :param payload_type: 请求的负载类型. Defaults to None.
   :type payload_type: Optional[str], optional
   :param stream: 返回是否为流数据. Defaults to False.
   :type stream: bool, optional
   :param verify: https请求是否验证. Defaults to False.
   :type verify: bool, optional
   :param cert: https请求的客户端认证文件. Defaults to None.
   :type cert: Optional[str], optional
   :param cb: 获取到数据后的处理回调. Defaults to None.
   :type cb: Optional[Callable[[str],None]], optional


.. py:data:: http_query
   

   

.. py:function:: query(url: str, method: str, *, auth: Optional[str] = None, auth_type: Optional[str] = None, payload: Optional[str] = None, payload_type: Optional[str] = None, stream: bool = False, verify: bool = False, cert: Optional[str] = None) -> None


