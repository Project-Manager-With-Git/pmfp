:py:mod:`pmfp.entrypoint.cache.get`
===================================

.. py:module:: pmfp.entrypoint.cache.get

.. autoapi-nested-parse::

   ppm cache get命令的处理.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   core/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.cache.get.SourcePack



Functions
~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.cache.get.get_cache_dir
   pmfp.entrypoint.cache.get.get_sourcepack



Attributes
~~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.cache.get.cache_get


.. py:class:: SourcePack(repo_name: str, *, repo_namespace: Optional[str] = None, tag: str = 'latest', host: Optional[str] = None)

   资源包类.

   .. py:attribute:: TENPLATE_URL
      :annotation: = {host}::{repo_namespace}::{repo_name}@{tag}

      

   .. py:method:: from_sourcepack_string(cls, sourcepack_string: str) -> SourcePack
      :classmethod:

      从资源包字符串构造资源包对象.

      :param sourcepack_string: 用于描述资源包的字符串,其形式为`"[[{host}::]{repo_namespace}::]{repo_name}[@{tag}]"`
      :type sourcepack_string: str

      :returns: 资源包对象.
      :rtype: [SourcePack]


   .. py:method:: as_sourcepack_string(self) -> str

      构造资源包字符串.


   .. py:method:: git_url(self, schema: str = 'https') -> str

      构造资源包的git仓库地址url.

      :param schema: url协议. Defaults to "https".
      :type schema: str, optional

      :returns: git的仓库地址字符串.
      :rtype: str


   .. py:method:: pull_latest(self, cache_dir: pathlib.Path, throw: bool = True) -> None

      拉取最新镜像,并将原来的版本以hash为tag保存

      :param temp_dir: [description]
      :type temp_dir: Path
      :param throw: 是否抛出异常
      :type throw: bool


   .. py:method:: clone_source_pack(self, cache_dir: pathlib.Path, throw: bool = False) -> None

      克隆资源包到本地缓存临时文件夹.

      如果资源包的tag不是latest则clone下来后删除.git文件夹,否则保存

      :param cache_dir: 缓存文件夹地址.
      :type cache_dir: Path
      :param throw: 是否抛出异常
      :type throw: bool


   .. py:method:: source_pack_path(self, cache_dir: pathlib.Path) -> pathlib.Path

      构造资源包的本地路径.

      :param cache_dir: 缓存文件夹路径.
      :type cache_dir: Path

      :returns: 资源包所在的文件夹路径
      :rtype: Path


   .. py:method:: cache(self, cache_dir: pathlib.Path, throw_clone: bool = False, throw_pull: bool = False, not_pull: bool = False) -> None

      缓存资源包到本地.

      :param cache_dir: 缓存文件夹地址.
      :type cache_dir: Path
      :param throw: 是否抛出异常
      :type throw: bool



.. py:function:: get_cache_dir() -> pathlib.Path

   获取缓存根目录.


.. py:data:: cache_get
   

   

.. py:function:: get_sourcepack(source_pack_string: str) -> None

   从远程指定位置获取资源包.

   :param source_pack_string: 描述资源包的字符串,格式为"[{host}::]{repo_namespace}::{repo_name}[@{tag}]".
   :type source_pack_string: str


