:mod:`pmfp.entrypoint.grpc.build_`
==================================

.. py:module:: pmfp.entrypoint.grpc.build_

.. autoapi-nested-parse::

   编译grpc的protobuf为不同语言的代码并构造模板.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   build_pb_cpp/index.rst
   build_pb_go/index.rst
   build_pb_js/index.rst
   build_pb_py/index.rst
   core/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.grpc.build_.get_abs_path
   pmfp.entrypoint.grpc.build_.get_abs_path_str
   pmfp.entrypoint.grpc.build_.build_pb_go
   pmfp.entrypoint.grpc.build_.build_pb_js
   pmfp.entrypoint.grpc.build_.build_pb_py
   pmfp.entrypoint.grpc.build_.build_pb_cpp
   pmfp.entrypoint.grpc.build_._build_pb
   pmfp.entrypoint.grpc.build_.build_grpc



Attributes
~~~~~~~~~~

.. autoapisummary::

   pmfp.entrypoint.grpc.build_.grpc_build


.. function:: get_abs_path(path_str: str, cwd: Optional[pathlib.Path] = None) -> pathlib.Path

   由路径字符串获取绝对路径.

   :param path_str: 路径字符创
   :type path_str: str
   :param cwd: 指定执行时的位置
   :type cwd: Optional[Path]

   :returns: 路径字符串的绝对路径
   :rtype: Path


.. function:: get_abs_path_str(path_str: str, cwd: Optional[pathlib.Path] = None) -> str

   由路径字符串获取绝对路径.

   :param path_str: 路径字符创
   :type path_str: str
   :param cwd: 指定执行时的位置
   :type cwd: Optional[Path]

   :returns: 路径字符串的绝对路径字符串
   :rtype: str


.. function:: build_pb_go(serv_file: str, includes: List[str], to: str, source_relative: bool, cwd: pathlib.Path, files: Optional[List[str]] = None, web: bool = False, **kwargs: str) -> None

   编译grpc的protobuffer定义文件为go语言模块.

   :param serv_file: 定义grpc service的目标proto文件
   :type serv_file: str
   :param includes: 待编译的protobuffer文件所在的文件夹
   :type includes: List[str]
   :param to: 编译成的模块文件放到的路径
   :type to: str
   :param source_relative: 是否使用路径作为包名,只针对go语言
   :type source_relative: bool
   :param cwd: 执行目录.
   :type cwd: Path
   :param files: 其他待编译的protobuffer文件
   :type files: Optional[List[str]]


.. function:: build_pb_js(serv_file: str, includes: List[str], to: str, cwd: pathlib.Path, js_import_style: str, web_import_style: str, web_mode: str, files: Optional[List[str]] = None, web: bool = False, **kwargs: str) -> None

   编译grpc的protobuf定义文件为js语言模块.

   :param serv_file: 定义grpc service的目标proto文件
   :type serv_file: str
   :param includes: 待编译的protobuffer文件所在的文件夹
   :type includes: List[str]
   :param to: 编译成的模块文件放到的路径
   :type to: str
   :param cwd: 执行目录.
   :type cwd: Path
   :param js_import_style: 生成的js/ts文件类型
   :type js_import_style: str
   :param web_import_style: 使用grpc-web时的导入模式
   :type web_import_style: str
   :param web_mode: 使用grpc-web时的
   :type web_mode: str
   :param files: 待编译的protobuffer文件
   :type files: List[str]
   :param web: 是否使用grpc-web编译
   :type web: bool


.. function:: build_pb_py(serv_file: str, includes: List[str], to: str, cwd: pathlib.Path, files: Optional[List[str]] = None, **kwargs: str) -> None

   编译grpc的protobuf定义文件为python语言模块.

   :param serv_file: 定义grpc service的目标proto文件
   :type serv_file: str
   :param includes: 待编译的protobuffer文件所在的文件夹
   :type includes: List[str]
   :param to: 编译成的模块文件放到的路径
   :type to: str
   :param cwd: 执行目录.
   :type cwd: Path
   :param files: 待编译的protobuffer文件
   :type files: List[str]


.. function:: build_pb_cpp(serv_file: str, includes: List[str], to: str, cwd: pathlib.Path, files: Optional[List[str]] = None, **kwargs: str) -> None

   编译grpc的protobuffer定义文件为C++语言模块.

   :param serv_file: 定义grpc service的目标proto文件
   :type serv_file: str
   :param includes: 待编译的protobuffer文件所在的文件夹
   :type includes: List[str]
   :param to: 编译成的模块文件放到的路径
   :type to: str
   :param cwd: 执行目录.
   :type cwd: Path
   :param files: 其他待编译的protobuffer文件
   :type files: Optional[List[str]]


.. data:: grpc_build
   

   

.. function:: _build_pb(language: str, serv_file: str, includes: List[str], to: str, go_source_relative: bool, js_import_style: str, web_import_style: str, web_mode: str, cwd: pathlib.Path, web: bool = False, files: Optional[List[str]] = None, **kwargs: str) -> None


.. function:: build_grpc(language: str, serv_file: str, pb_includes: List[str], to: str, js_import_style: str, web_import_style: str, web_mode: str, go_source_relative: bool = False, web: bool = False, kwargs: Optional[str] = None, files: Optional[List[str]] = None, cwd: str = '.') -> None

   编译grpc的protobuf的schema为不同语言的代码.

   :param language: 编译到的执行环境,可选的有"go","py","js"
   :type language: List[str]
   :param serv_file: 服务文件名.
   :type serv_file: str
   :param pb_includes: 待编译文件及其依赖所在文件夹列表
   :type pb_includes: List[str]
   :param to: 编译到的模块所在文件夹.
   :type to: str
   :param source_relative: 是否使用路径作为包名,只针对go语言
   :type source_relative: bool
   :param kwargs: Default: None,
   :type kwargs: Optional[str]
   :param files: 待编译的其他文件列表
   :type files: Optional[List[str]]
   :param cwd: 执行的根目录. Default: "."
   :type cwd: str


