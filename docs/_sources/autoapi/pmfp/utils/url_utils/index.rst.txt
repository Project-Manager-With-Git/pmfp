:py:mod:`pmfp.utils.url_utils`
==============================

.. py:module:: pmfp.utils.url_utils

.. autoapi-nested-parse::

   与url字符串相关的工具代码.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   pmfp.utils.url_utils.is_url
   pmfp.utils.url_utils.is_http_url
   pmfp.utils.url_utils.is_file_url
   pmfp.utils.url_utils.query_http
   pmfp.utils.url_utils.parse_file_url
   pmfp.utils.url_utils.parse_http_url
   pmfp.utils.url_utils.get_source_from_url



.. py:function:: is_url(url: str) -> bool

   判断url是否是url.

   :param url: 待判断的url字符串
   :type url: str

   :returns: 是否是url
   :rtype: bool


.. py:function:: is_http_url(url: str) -> bool

   判断url是否是http请求的url.

   :param url: 待判断的url字符串
   :type url: str

   :returns: 是否是url
   :rtype: bool


.. py:function:: is_file_url(url: str) -> bool

   判断url是否是文件协议相关的url.

   :param url: 待判断的url字符串
   :type url: str

   :returns: 是否是url
   :rtype: bool


.. py:function:: query_http(url: str, method: str, *, auth: Optional[str] = None, auth_type: Optional[str] = None, payload: Optional[str] = None, payload_type: Optional[str] = None, stream: bool = False, verify: bool = False, cert: Optional[str] = None, cb: Optional[Callable[[str], None]] = None) -> None

   http请求并打印结果.

   :param url: 要访问的http资源的地址
   :type url: str
   :param method: 访问资源的方法
   :type method: str
   :param auth: 用户身份验证字符串. Defaults to None.
   :type auth: Optional[str], optional
   :param auth_type: 用户身份的验证类型. Defaults to None.
   :type auth_type: Optional[str], optional
   :param payload: 请求负载. Defaults to None.
   :type payload: Optional[str], optional
   :param payload_type: 请求的负载类型. Defaults to None.
   :type payload_type: Optional[str], optional
   :param stream: 返回是否为流数据. Defaults to False.
   :type stream: bool, optional
   :param verify: https请求是否验证. Defaults to False.
   :type verify: bool, optional
   :param cert: https请求的客户端认证文件. Defaults to None.
   :type cert: Optional[str], optional
   :param cb: 获取到数据后的处理回调. Defaults to None.
   :type cb: Optional[Callable[[str],None]], optional


.. py:function:: parse_file_url(url: str) -> str

   从file url中提取文件系统中的路径.

   :param url: file url
   :type url: str

   :returns: file url中提取出的路径
   :rtype: str


.. py:function:: parse_http_url(url: str) -> str

   从file url中提取文件系统中的路径.

   :param url: file url
   :type url: str

   :returns: file url中提取出的路径
   :rtype: str


.. py:function:: get_source_from_url(url: str) -> str

   从指定url中回去源数据.

   注意只能获取静态http资源.

   :param url: url地址
   :type url: str

   :raises AttributeError: url未成功返回
   :raises AttributeError: 未支持的类型

   :returns: 内容文本
   :rtype: str


