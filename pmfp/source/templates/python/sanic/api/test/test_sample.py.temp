import unittest
from $project_name import app


def setUpModule():
    print("setUpModule")


def tearDownModule():
    print("tearUpModule")


class SanicTest(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        print("setUpClass")

    @classmethod
    def tearDownClass(cls):
        print("tearDownClass")

    def setUp(self):
        self.app = app.test_client
        print('set up')

    def tearDown(self):
        print("tear down")

    def test_get(self):
        request, response = self.app.get('/api/simple')
        self.assertEqual(response.json["message"], 'I am get method')

    def test_post(self):
        request, response = self.app.post('/api/simple')
        self.assertEqual(response.json["message"], 'I am post method')

    def test_put(self):
        request, response = self.app.put('/api/simple')
        self.assertEqual(response.json["message"], 'I am put method')

    def test_delete(self):
        request, response = self.app.delete('/api/simple')
        self.assertEqual(response.json["message"], 'I am delete method')

    def test_patch(self):
        request, response = self.app.patch('/api/simple')
        self.assertEqual(response.json["message"], 'I am patch method')


def ping_suite():
    suite = unittest.TestSuite()
    suite.addTest(SanicTest("test_ping"))
    return suite


if __name__ == '__main__':
    runner = unittest.TextTestRunner(verbosity=2)
    test_suite = ping_suite()
    runner.run(test_suite)
