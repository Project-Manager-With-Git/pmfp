import sys
import json
import unittest
from pathlib import Path
try:
    from test.test_api._core import Core
except:
    path = str(
        Path(__file__).absolute().parent.parent
    )
    if path not in sys.path:
        sys.path.append(path)
    from _core import Core


class UserTest(Core):

    def test_get(self):
        request, response = self.client.get('/api/user/1')
        result = response.json
        print(result)
        assert "name" in result.keys()

    def test_update(self):
        request, response = self.client.put(
            '/api/user/1',
            json={
                "age": 30
            }
        )
        request, response = self.client.get('/api/user/1')
        result = response.json
        age = result["age"]
        assert age == 30, str(age)

    def test_delete(self):
        request, response = self.client.get('/api/user/1')
        result = response.json
        assert "name" in result.keys()

        request, response = self.client.delete('/api/user/1')
        result = response.json
        assert result["msg"] == "删除成功"

        request, response = self.client.get('/api/user/1')
        assert response.status == 401 , str(response.status)+str(response)
        result = response.json
        assert result["msg"] == "未找到用户"

    def test_create(self):
        request, response = self.client.get('/api/user')
        result = response.json
        assert result["user-count"] == 4
        request, response = self.client.post(
            '/api/user',
            json={
                "name": "hsz",
                "age": 12
            })
        result = response.json
        uid = result["uid"]
        request, response = self.client.get(f'/api/user')
        result = response.json
        assert result["user-count"] == 5, str(result["user-count"])
        request, response = self.client.get(f'/api/user/{uid}')
        result = response.json
        assert result["name"] == "hsz"
        assert result["age"] == 12


def user_suite():
    suite = unittest.TestSuite()
    suite.addTest(UserTest("test_get"))
    suite.addTest(UserTest("test_update"))
    suite.addTest(UserTest("test_delete"))
    suite.addTest(UserTest("test_create"))
    return suite


if __name__ == '__main__':
    runner = unittest.TextTestRunner(verbosity=2)
    test_suite = user_suite()
    runner.run(test_suite)
